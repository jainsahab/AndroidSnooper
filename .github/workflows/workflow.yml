#  Referencing From https://github.com/qbalsdon/currency_list_app/blob/master/.github/workflows/android-feature.yml
name: AndroidSnooper CI
on:
  push:
    branches:
      - '*'
  pull_request:
    branches:
      - '*'
jobs:

  unit_test:
    name: Run Unit Test
    runs-on: macos-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set Up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
      - name: Cache gradle wrapper
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: test-${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            test-${{ runner.os }}-gradle-
      - name: Execute Unit Tests
        run: bash ./gradlew clean testDebugUnitTest
      - name: Archive unit test coverage results
        uses: actions/upload-artifact@v2
        with:
          name: unit-test-coverage-report
          path: Snooper/build/jacoco/testDebugUnitTest.exec
      - name: Archive compiled kotlin classes
        uses: actions/upload-artifact@v2
        with:
          name: generated-kotlin-classes
          path: Snooper/build/tmp/kotlin-classes/debug

  integration_test:
    name: Run Instrumention tests
    runs-on: macos-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set Up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
      - name: Cache gradle wrapper
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: test-${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            test-${{ runner.os }}-gradle-

      - name: Execute Instrumentation Tests (gradlew connectedCheck - api 23)
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: 23
          target: default
          arch: x86
          profile: Nexus 6
          script: ./gradlew clean connectedDebugAndroidTest --stacktrace
      - name: Archive espresso test coverage results
        uses: actions/upload-artifact@v2
        with:
          name: espresso-test-coverage-report
          path: Snooper/build/outputs/code_coverage

  lint:
    name: Run Lint
    runs-on: macos-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set Up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8

      - name: Cache gradle wrapper
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: test-${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            test-${{ runner.os }}-gradle-

      - name: Execute Lint
        run: bash ./gradlew clean lintDebug

  snapshot_deployment:
    name: Deploys to snapshot repository
    if: github.event_name == 'push'
    runs-on: macos-latest
    needs: [unit_test, integration_test, lint]
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set Up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8

      - name: Cache gradle wrapper
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: snapshot-deploy-${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            snapshot-deploy-${{ runner.os }}-gradle-

      - name: Deploying snapshot version
        run: bash ./gradlew uploadArchives
        env:
          NEXUS_USERNAME: ${{ secrets.NEXUS_USERNAME }}
          NEXUS_PASSWORD: ${{ secrets.NEXUS_PASSWORD }}

  code_coverage_reports:
    name: Generate code coverage reports
    if: github.event_name == 'push'
    runs-on: macos-latest
    needs: [unit_test, integration_test]
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set Up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
      - name: Cache gradle wrapper
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: snapshot-deploy-${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            snapshot-deploy-${{ runner.os }}-gradle-
      - name: Download unit test coverage file (.exec)
        uses: actions/download-artifact@v2
        with:
          name: unit-test-coverage-report
          path: Snooper/build
      - name: Download espresso test coverage file (.ec)
        uses: actions/download-artifact@v2
        with:
          name: espresso-test-coverage-report
          path: Snooper/build
      - name: Download generated kotlin classes
        uses: actions/download-artifact@v2
        with:
          name: generated-kotlin-classes
          path: Snooper/build/tmp/kotlin-classes/debug
      - name: Generate reports
        run: bash ./gradlew generateCiDebugTestReports --rerun-tasks -i
      - name: Publish reports
        uses: codecov/codecov-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: Snooper/build/reports/jacoco/generateCiDebugTestReports/generateCiDebugTestReports.xml
          fail_ci_if_error: true
          verbose: true
      - name: Archive html reports
        uses: actions/upload-artifact@v2
        with:
          name: code-coverage-html-reports
          path: Snooper/build/reports/jacoco/generateCiDebugTestReports/html
